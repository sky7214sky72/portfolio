buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    implementation("io.jsonwebtoken:jjwt-api:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5")
    compileOnly 'org.projectlombok:lombok'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-logging
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-logging', version: '3.2.3'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testRuntimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '5.4.0'
    testImplementation 'org.springframework.security:spring-security-test'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
//    testImplementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
//    testAnnotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
//    testAnnotationProcessor "jakarta.annotation:jakarta.annotation-api"
//    testAnnotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

// Querydsl 설정부
//def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
//tasks.withType(JavaCompile).configureEach {
//    options.getGeneratedSourceOutputDirectory().set(file(generated))
//}

// java source set 에 querydsl QClass 위치 추가
//sourceSets {
//    main.java.srcDirs += [ generated ]
//}

// gradle clean 시에 QClass 디렉토리 삭제
//clean {
//    delete file(generated)
//}

tasks.register('copyApplicationYml', Copy) {
    from './portfolio-config'
    include '*.yml'
    into './src/main/resources'
}

tasks.named('test') {
    useJUnitPlatform()
}
